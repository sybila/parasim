buildscript {
    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.13.1"
    }
}

configure(subprojects.findAll {it.name != 'lsodacpp'}) {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: "com.github.hierynomus.license"

    version = '2.2.0'
    group = 'org.sybila.parasim'

    repositories {
        jcenter()
        mavenCentral()
        // jsbml
        maven { url "http://jsbml.sourceforge.net/m2repo" }
        // mangosdk
        maven { url 'http://www.ebi.ac.uk/~maven/m2repo' }
        //lt_downsampling_java8
        maven { url 'https://jitpack.io' }
    }

    //global configuration
    ext {
        commonsLogging = '1.1.1'
        jsbml = '1.2-beta1'
    }

    //common dependencies for everyone
    dependencies {
        testCompile group: 'junit', name: 'junit', version: '4.11'
        testCompile 'org.testng:testng:6.9.12'
        compile 'org.testng:testng:6.9.12'
        compile 'net.jcip:jcip-annotations:1.0'
        compile 'org.javassist:javassist:3.22.0-CR1'
        compile 'org.slf4j:slf4j-log4j12:1.7.2'
        compile 'org.apache.commons:commons-lang3:3.5'
        compile 'org.knowm.xchart:xchart:3.5.2'
        compile 'com.github.ggalmazor:lt_downsampling_java8:0.0.6'
    }

    license {
        header rootProject.file('license_template.txt')
        strictCheck true
        ext.year = '2011-2016'
        ext.name = 'Sybila, Systems Biology Laboratory'
    }

    test {
        useTestNG()
    }

    jacocoTestReport {
        reports {
            xml.enabled = true
            html.enabled = true
        }
    }

    check.dependsOn jacocoTestReport

    test {
        testLogging {   //more printing during tests
            events "passed", "skipped", "failed"
        }
    }

    test {
        systemProperties = [
                'java.library.path' : "${rootProject.projectDir}/lsodacpp/build/libs/sim/shared"
        ]
    }
}

task build {
    dependsOn gradle.includedBuild('lsodacpp').task(':build')
}

task assemble {
    dependsOn gradle.includedBuild('lsodacpp').task(':assemble')
}

task clean {
    dependsOn gradle.includedBuild('lsodacpp').task(':clean')
}

tasks.withType(Test) {
    systemProperty "java.library.path", "/lsodacpp/build/libs/sim/shared"
}

