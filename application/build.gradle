import org.apache.tools.ant.taskdefs.condition.Os
apply plugin: 'application'

mainClassName = 'org.sybila.parasim.application.Main'

group = 'org.sybila.parasim.application'

applicationDefaultJvmArgs = ["-Djava.library.path=${rootProject.projectDir}/lsodacpp/build/libs/sim/shared"]

dependencies {
	compile 'org.mod4j.org.apache.commons:cli:1.0.0'
	compile project(':model:ode')
	compile project(':model:space')
	compile project(':model:trajectory')
	compile project(':model:verification')
	compile project(':extensions:computation-simulation-impl')
	compile project(':extensions:computation-density-impl')
	compile project(':extensions:computation-verification-impl')
	compile project(':extensions:computation-lifecycle-impl')
	compile project(':extensions:computation-cycledetection-impl')
	compile project(':extensions:visualisation-plot-impl')
	compile project(':extensions:result-export-impl')
	compile project(':extensions:project-manager-simple')
	compile project(':extensions:progress-logger')
}

distributions {

	if (Os.isFamily(Os.FAMILY_WINDOWS)) {
		println "*** WINDOWS "
		main {
			baseName = 'parasim'
			contents {
				from rootProject.file('README.markdown')
				from rootProject.file('LICENSE.txt')
				from rootProject.file('lsodacpp/build/libs/sim/shared/sim.dll')
			}
		}
	}
	if (Os.isFamily(Os.FAMILY_UNIX)) {
		println "*** LINUX "
		main {
			baseName = 'parasim'
			contents {
				from rootProject.file('README.markdown')
				from rootProject.file('LICENSE.txt')
				from rootProject.file('lsodacpp/build/libs/sim/shared/libsim.so')
			}
		}
	}
	if (Os.isFamily(Os.FAMILY_MAC)) {
		println "*** MAC "
		main {
			baseName = 'parasim'
			contents {
				from rootProject.file('README.markdown')
				from rootProject.file('LICENSE.txt')
				from rootProject.file('lsodacpp/build/libs/sim/shared/libsim.dylib')
			}
		}
	}
}

startScripts {
	applicationName = 'parasim'
	if (Os.isFamily(Os.FAMILY_WINDOWS)) {
		classpath = files('$APP_HOME/lib/*')
	}
}